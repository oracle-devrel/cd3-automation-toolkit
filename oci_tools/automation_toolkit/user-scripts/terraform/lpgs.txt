// Copyright (c) 2021, 2022, Oracle and/or its affiliates.

############################
# Module Block - Networking
# Create Local Peering Gateways
############################

module "hub-lpgs" {
  source = "./modules/network/lpg"
  for_each = (var.lpgs.hub-lpgs != null || var.lpgs.hub-lpgs != {})  ? var.lpgs.hub-lpgs : {}

  depends_on = [module.vcns, module.spoke-lpgs, module.fetch-vcns, module.fetch-compartments]

  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid

  vcn_id = length(regexall("ocid1.vcn.oc1*", each.value.vcn_name)) > 0 ? each.value.vcn_name : merge(module.vcns.*...)[each.value.vcn_name]["vcn_id"][each.value.vcn_name]

  #Optional
  peer_id = each.value.peer_id != "" ? (length(regexall("##peer_id*", each.value.peer_id)) > 0 ? null : merge(module.spoke-lpgs.*...)[each.value.peer_id]["lpg_id"][each.value.peer_id]) : null
  route_table_id = each.value.route_table_id
  defined_tags  = each.value.defined_tags
  display_name  = each.value.lpg_name != null ? each.value.lpg_name : null
  freeform_tags = each.value.freeform_tags
}

module "spoke-lpgs" {
  source = "./modules/network/lpg"
  for_each = (var.lpgs.spoke-lpgs != null || var.lpgs.spoke-lpgs != {})  ? var.lpgs.spoke-lpgs : {}

  depends_on = [module.vcns,module.fetch-vcns, module.fetch-compartments]

  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid

  vcn_id = length(regexall("ocid1.vcn.oc1*", each.value.vcn_name)) > 0 ? each.value.vcn_name : merge(module.vcns.*...)[each.value.vcn_name]["vcn_id"][each.value.vcn_name]

  #Optional
  peer_id = (each.value.peer_id != "" && each.value.peer_id != null)  ? each.value.peer_id : null
  route_table_id = each.value.route_table_id
  defined_tags  = each.value.defined_tags
  display_name  = each.value.lpg_name != null ? each.value.lpg_name : null
  freeform_tags = each.value.freeform_tags
}

module "exported-lpgs" {
  source = "./modules/network/lpg"
  for_each = (var.lpgs.exported-lpgs != null || var.lpgs.exported-lpgs != {})  ? var.lpgs.exported-lpgs : {}

  depends_on = [module.vcns,module.fetch-vcns, module.fetch-compartments]

  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid

  vcn_id = length(regexall("ocid1.vcn.oc1*", each.value.vcn_name)) > 0 ? each.value.vcn_name : merge(module.vcns.*...)[each.value.vcn_name]["vcn_id"][each.value.vcn_name]

  #Optional
  peer_id = (each.value.peer_id != "" && each.value.peer_id != null)  ? each.value.peer_id : null
  route_table_id = each.value.route_table_id
  defined_tags  = each.value.defined_tags
  display_name  = each.value.lpg_name != null ? each.value.lpg_name : null
  freeform_tags = each.value.freeform_tags
}

/*
output "lpg_id" {
  value = [ for k,v in merge(module.lpgs.*...) : v.lpg_id ]
}
*/