// Copyright (c) 2021, 2022, Oracle and/or its affiliates.

############################
# Module Block - ManagementServices
# Create Notifications_Topics
############################

module "notifications_topics" {
  source                = "./modules/managementservices/notification_topic"
  for_each              = var.notifications_topics != null ? var.notifications_topics : {}

  compartment_name = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid
  description = each.value.description
  topic_name = each.value.topic_name

  #Optional
  defined_tags  = each.value.defined_tags
  freeform_tags = each.value.freeform_tags
}

module "notifications_subscriptions" {
  source                = "./modules/managementservices/notification_subscription"
  for_each              = var.notifications_subscriptions != null ? var.notifications_subscriptions : {}

  depends_on = [module.notifications_topics]
  compartment_name = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid
  endpoint = each.value.endpoint
  protocol = each.value.protocol
  topic_name = length(regexall("ocid1.onstopic.oc1*", each.value.topic_name)) > 0 ? each.value.topic_name : merge(module.notifications_topics.*...)[each.value.topic_name]["topic_id"][each.value.topic_name]
  subscription_name = each.value.subscription_name
  #Optional
  defined_tags  = each.value.defined_tags
  freeform_tags = each.value.freeform_tags
}

/*
output "policies_id_map" {
  value = [ for k,v in merge(module.iam-policies.*...) : v.policies_id_map]
}
*/