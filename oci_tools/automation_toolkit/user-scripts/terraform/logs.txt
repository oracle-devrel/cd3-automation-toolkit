// Copyright (c) 2021, 2022, Oracle and/or its affiliates.

#############################
# Module Block - Logging
# Create Log Groups and Logs
#############################

module "log-groups" {
  source = "./modules/managementservices/log-groups"
  for_each  =  (var.log_groups != null || var.log_groups != {})  ? var.log_groups : {}

  # Log Groups
  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid

  display_name   = each.value.display_name != null ? each.value.display_name : null

  #Optional
  defined_tags               =  each.value.defined_tags
  description               =  each.value.description != null ?  each.value.description : null
  freeform_tags              =  each.value.freeform_tags
}

/*
output "log_group_map" {
  value = [ for k,v in merge(module.log-groups.*...) : v.log_group_id ]
}
*/

module "logs" {
  source = "./modules/managementservices/log"
  for_each  =  (var.logs != null || var.logs != {})  ? var.logs : {}

  # Logs
  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid
  display_name   = each.value.display_name != null ? each.value.display_name : null
  log_group_id   = length(regexall("ocid1.vcn.oc1*", each.value.log_group_id)) > 0 ? each.value.log_group_id : merge(module.log-groups.*...)[each.value.log_group_id]["log_group_id"][each.value.log_group_id]

  log_type = each.value.log_type
  #Required
  source_category        = each.value.category
  source_resource        = length(regexall("ocid1.*", each.value.resource)) > 0 ? each.value.resource : merge(module.subnets.*...)[each.value.resource]["subnet_flow_logs_id"][0]
  source_service         = each.value.service
  source_type            = each.value.source_type
  defined_tags           = each.value.defined_tags
  freeform_tags          = each.value.freeform_tags
  log_is_enabled         = (each.value.is_enabled == "" || each.value.is_enabled == null) ? true : each.value.is_enabled
  log_retention_duration = (each.value.retention_duration == "" || each.value.retention_duration == null) ? 30 : each.value.retention_duration

}