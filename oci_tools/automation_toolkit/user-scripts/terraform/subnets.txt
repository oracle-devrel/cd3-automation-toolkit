// Copyright (c) 2021, 2022, Oracle and/or its affiliates.

#############################
# Module Block - Network
# Create Subnets
#############################

module "subnet" {
  source = "./modules/network/subnets"
  for_each  = (var.subnets != null || var.subnets != {})  ? var.subnets : {}

  depends_on = [module.vcns, module.fetch-vcns, module.fetch_compartments]

  #Required
  tenancy_ocid   = var.tenancy_ocid
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid
  vcn_id = length(regexall("ocid1.vcn.oc1*", each.value.vcn_name)) > 0 ? each.value.vcn_name : merge(module.vcns.*...)[each.value.vcn_name]["vcn_id"][each.value.vcn_name]

  cidr_block = each.value.cidr_block

  #Optional
  dns_label                  = ( each.value.dns_label != null &&  each.value.dns_label != "") ?  each.value.dns_label : null
  ipv6cidr_block             = ( each.value.ipv6cidr_block != null &&  each.value.ipv6cidr_block != "") ?  each.value.ipv6cidr_block : null
  defined_tags               =  each.value.defined_tags
  display_name               =  each.value.display_name != null ?  each.value.display_name : null
  freeform_tags              =  each.value.freeform_tags
  prohibit_internet_ingress  = ( each.value.prohibit_internet_ingress != null &&  each.value.prohibit_internet_ingress != "") ?  each.value.prohibit_internet_ingress : false
  prohibit_public_ip_on_vnic = ( each.value.prohibit_public_ip_on_vnic != null &&  each.value.prohibit_public_ip_on_vnic != "") ?  each.value.prohibit_public_ip_on_vnic : false
  availability_domain        =  each.value.availability_domain

  dhcp_options_id = length(regexall("ocid1.dhcpoptions.oc1*",  each.value.dhcp_options_id)) > 0 ?  each.value.dhcp_options_id : ((each.value.dhcp_options_id != "" &&  each.value.dhcp_options_id != null) ? try(merge(module.custom-dhcps.*...)[each.value.dhcp_options_id]["custom_dhcp_id"][each.value.dhcp_options_id], merge(module.default-dhcps.*...)[each.value.dhcp_options_id]["default_dhcp_id"][each.value.dhcp_options_id]) :  each.value.dhcp_options_id)

  route_table_id = length(regexall("ocid1.routetable.oc1*", each.value.route_table_id)) > 0 ? each.value.route_table_id : (each.value.route_table_id != "" && each.value.route_table_id != null) ? merge(module.route-tables.*...)[each.value.route_table_id]["route_id"][each.value.route_table_id] : each.value.route_table_id)

  security_list_ids = [for sl in each.value.security_list_ids : ( length(regexall("ocid1.securitylist.oc1*",sl)) > 0 ? sl : merge(module.security-lists.*...)[sl]["seclist_id"][sl])]

}

output "subnet_id_map" {
  value = [ for k,v in merge(module.subnet.*...) : v.subnet_id ]
}

