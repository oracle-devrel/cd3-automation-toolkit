// Copyright (c) 2021, 2022, Oracle and/or its affiliates.

#############################
# Module Block - Network
# Create Network Security Groups
#############################

module "nsgs" {
  source = "./modules/network/nsg"
  for_each  = (var.nsgs != null || var.nsgs != {}) ? var.nsgs : {}

  #Required
  compartment_id = each.value.compartment_name != null ? (length(regexall("ocid1.compartment.oc1*", each.value.compartment_name)) > 0 ? each.value.compartment_name : var.compartment_ocids[0][each.value.compartment_name]) : var.tenancy_ocid
  vcn_id = length(regexall("ocid1.vcn.oc1*", each.value.vcn_name)) > 0 ? each.value.vcn_name : merge(module.vcns.*...)[each.value.vcn_name]["vcn_id_for_nsg"][0]

  defined_tags  = each.value.defined_tags
  display_name  = each.value.display_name != null ? each.value.display_name : null
  freeform_tags = each.value.freeform_tags
}

/*
output "nsg_id_map" {
	value = [ for k,v in merge(module.nsgs.*...) : v.nsg_tf_id ]
}
*/

module "nsg-rules" {
  source = "./modules/network/nsg-rules"
  for_each  = (var.nsg_rules != null || var.nsg_rules != {})  ? var.nsg_rules : {}
  depends_on = [ module.nsgs ]

  #Required
  nsg_id = length(regexall("ocid1.networksecuritygroup.oc1*", each.value.nsg_id)) > 0 ? each.value.nsg_id : merge(module.nsgs.*...)[each.value.nsg_id]["nsg_tf_id"][0]
  direction = (each.value.direction == "" && each.value.direction == null) ? "INGRESS" : each.value.direction
  protocol = each.value.protocol

  #Optional
  description = each.value.description
  destination_addr = (each.value.destination_type == "NETWORK_SECURITY_GROUP") ? merge(module.nsgs.*...)[each.value.destination]["nsg_tf_id"][0] : each.value.destination
  destination_type = each.value.destination_type
  source_addr = each.value.source_type == "NETWORK_SECURITY_GROUP" ? merge(module.nsgs.*...)[each.value.source]["nsg_tf_id"][0] : each.value.source
  source_type = each.value.source_type
  stateless = (each.value.stateless != "" && each.value.stateless != null) ? each.value.stateless : false
  key_name      = each.key
  nsg_rules_details = var.nsg_rules
}

