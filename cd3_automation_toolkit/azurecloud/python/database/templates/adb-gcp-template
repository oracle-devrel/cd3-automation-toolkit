{% if count == 0 %}
# Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
############################
# ADB @Azure
# ADB @Azure - tfvars
# Allowed Values:
# compartment_id and network_compartment_id can be the ocid or the name of the compartment hierarchy delimited by double hiphens "--"
# Example : compartment_id = "ocid1.compartment.oc1..aaaaaaaahwwiefb56epvdlzfic6ah6jy3xf3c" or compartment_id = "Database--Prod" where "Database" is the parent of "Prod" compartment
############################

az_oci_adb = {
       ##Add New ADB @Azure here##
}
{% else %}

     {{ display_tf_name }} =  {
            az_region                = "{{ azure_region }}"
            resource_group_name      = "{{ container_id }}"

            display_name             = "{{ display_tf_name }}"
            db_version               = "{{ db_version }}"
            license_model            = "{{ license_model | replace("_","") }}"
            admin_password           = "{{ admin_password }}"

            virtual_network_id       = "{{ virtual_network_id }}"
            subnet_id                = "{{ subnet_id }}"
            {% if data_storage_size_in_tbs != "" and data_storage_size_in_tbs != "nan" %}
            data_storage_size_in_tbs = {{ data_storage_size_in_tbs }}
            {% endif %}
            {% if autonomous_value == 'adw' %}
            db_workload              = "DW"
            {% elif autonomous_value == 'atp' %}
            db_workload              = "OLTP"
            {% elif autonomous_value == 'json' %}
            db_workload              = "AJD"
            {% elif autonomous_value == 'apex' %}
            db_workload              = "APEX"
            {% else %}
            db_workload              = "{{ autonomous_value }}"
            {% endif %}

            compute_model           = "ECPU"
            compute_count           = {{ compute_count }}

            {% if character_set != "" and character_set != "nan" %}
            character_set            = "{{ character_set }}"
            {% endif %}
            {% if ncharacter_set != "" and ncharacter_set != "nan" %}
            ncharacter_set           = "{{ ncharacter_set }}"
            {% endif %}

            {% if customer_contacts and customer_contacts != "" and customer_contacts != "nan" %}
            customer_contacts        = [ {{ customer_contacts | replace("\'","\"") }} ]
            {% endif %}

            {% if backup_retention_period_in_days != "" and backup_retention_period_in_days != "nan" %}
            backup_retention_period_in_days = {{ backup_retention_period_in_days }}
            {% endif %}

            {% if auto_scaling_for_storage_enabled != "" and auto_scaling_for_storage_enabled != "nan" %}
            auto_scaling_for_storage_enabled = {{ auto_scaling_for_storage_enabled }}
            {% endif %}

            {% if auto_scaling_enabled != "" and auto_scaling_enabled != "nan" %}
            auto_scaling_enabled     = {{ auto_scaling_enabled }}
            {% endif %}

            {% if mtls_connection_required != "" and mtls_connection_required != "nan" %}
            mtls_connection_required = {{ mtls_connection_required }}
            {% endif %}


        {#  ##Do not modify below this line##  #}
        {#                                     #}
        {#  ###Section for adding Defined and Freeform Tags###  #}
        {% if defined_tags and defined_tags != 'nan' and defined_tags != '' and defined_tags != [['nan']] %}
          {% if defined_tags[0] %}
            defined_tags = {
            {% for tags in defined_tags  %}
                {% if not loop.last %}
                    "{{ tags[0]  }}"= "{{ tags[1] }}" ,
                {% else %}
                    "{{ tags[0]  }}"= "{{ tags[1] }}"
                {% endif %}
            {% endfor %}
            }
            {% endif %}
           {% endif %}
                {% if freeform_tags and freeform_tags != 'nan' and freeform_tags != '' and freeform_tags != [['nan']] %}
                    {% if freeform_tags[0] %}
            freeform_tags = {
                        {% for tags in freeform_tags %}
                            {% if not loop.last  %}
                    "{{ tags[0] }}"="{{ tags[1] }}",
                            {% else %}
                    "{{ tags[0] }}"="{{ tags[1] }}"
                            {% endif %}
                        {% endfor %}
                        }
                    {% endif %}
                {% endif %}
        {#  ###Section for adding Defined and Freeform Tags ends here###  #}
        },

{% endif %}

