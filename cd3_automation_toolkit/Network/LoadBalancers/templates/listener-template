{% if (skeleton and count == 0) %}
# Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
#
#############################
# Network
# Listeners - tfvars
# Allowed Values:
# HTTPS listener must have the protocol specified as HTTP
# protocols in ssl configuration defaults to "TLSv1.2"
# load_balancer_id can be the ocid or the key of load_balancers (map)
# default_backend_set_name,hostname_names,path_route_set_name,rule_set_names,cipher_suite_name,certificate_name must be the key of the respective maps
# Sample import command for Listeners:
# terraform import "module.listeners[\"<<listeners terraform variable name>>\"].oci_load_balancer_listener.listener" loadBalancers/<<loadbalancer ocid>>/listeners/<<listener name>>
#############################

listeners = {
  ##Add New Listeners for {{ region|lower }} here##
}{% else %}

    {{ lbr_tf_name }}_{{ listener_tf_name }} = {

        name = "{{ listener_name }}"
        load_balancer_id = "{{ lbr_tf_name }}"

        port = "{{ listener_port }}"
        protocol = "{{ protocol }}"
        default_backend_set_name = "{{ lbr_tf_name }}_{{ backend_set_tf_name }}"

        {% if idle_timeout_in_seconds and idle_timeout_in_seconds != '' %}
        connection_configuration = [{

            idle_timeout_in_seconds = "{{ idle_timeout_in_seconds }}"

            {% if backend_tcp_proxy_protocol_version and backend_tcp_proxy_protocol_version != '' %}
            backend_tcp_proxy_protocol_version = "{{ backend_tcp_proxy_protocol_version }}"
            {% endif %}

            }]
        {% endif %}

        hostname_names = [{{ lbr_hostnames }}]

        {% if path_route_set_tf_name and  path_route_set_tf_name != '' %}
        path_route_set_name = "{{ path_route_set_tf_name }}"
        {% endif %}

        rule_set_names = [{{ rule_set_names }}]

        {% if routing_policy_name and routing_policy_name != '' %}
        routing_policy_name = {{ routing_policy_name }}
        {% endif %}

        {% if certificate_tf_name and certificate_tf_name != "" and certificate_tf_name != 'nan' %}
        certificate_name = "{{ lbr_tf_name }}_{{ certificate_tf_name }}"
        {% endif %}

        {% if cipher_suite_name and cipher_suite_name != "" %}
        cipher_suite_name = "{{ cipher_suite_name }}"
        {% endif %}

        {% if usessl|lower == 'y' %}
        ssl_configuration  = [{

            {% if certificate_ids and certificate_ids != "" %}
            certificate_ids  = ["{{ certificate_ids }}"]
            {% endif %}

            {% if server_order_preference and server_order_preference != "" %}
            server_order_preference  = "{{ server_order_preference }}"
            {% endif %}

            {% if trusted_certificate_authority_ids and trusted_certificate_authority_ids != "" %}
            trusted_certificate_authority_ids  = ["{{ trusted_certificate_authority_ids }}"]
            {% endif %}

            {% if verify_peer_certificate %}
            verify_peer_certificate = {{  verify_peer_certificate }}
            verify_depth = {{ verify_depth }}
            {% endif %}

            {% if cipher_suite_name %}
            protocols = [ {{ ssl_protocols }} ]
            {% endif %}

        }]
            {% endif %}
    },
{% endif %}